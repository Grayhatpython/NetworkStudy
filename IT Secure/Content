- Threat ( 위협 )
- IT 자산에 피해를 줄 가능성

- Vulnerability ( 취약점 )
- 시스템의 보안이나 기능을 손상시키는 약점 

- Exploit 
- 취약점을 이용하여 시스템의 보안이나 기능을 손상시키는 것

- Risk ( 위험 )
- 공격이 성공할 가능성

- Mitigation ( 완화 )
- 공격의 가능성과 심각성을 제거하거나 줄이는 기술

- Malware
- 모든 악성 소프트웨어

- Viruses ( 비어러스 )
- 다른 소프트웨어에 스스로를 삽입하며 컴퓨터에서 컴퓨터로 퍼질 수 있는 소프트웨어

- Worms
- 스스로 복제할 수 있는 자가 전파 바이스러

- Trojan horses ( 트로이 목마 )
- 유용한 것처럼 위장하여 사람들이 설치하게끔 유도하는 악성 소프트웨어, 주로 백도어

- Ransomware 
- 공격자 키로 데이터를 암호화하고 피해자에게 이를 복구하는 조건으로 금전을 요구
- PC의 모든 데이터를 암호화하여 사용자가 자신의 데이터에 접근하지 못하게 만든다.

- Hacking Tools
- 방저아의 입장에 있는 Penetration testers (모의 해커)는 해커와 동일한 도구를 사용하여 취약점을 테스트한다

= Script Kiddies
= 상용 해킹 소프트웨어를 사용하여 Expliot을 시작하는 저숙력 공격자를 경멸적으로 부르는 용어

- Targeted Attacks
= 특정 개인이나 조직을 대상으로 하는 공격

= DoS ( Denial of Service )
- 서비스 거부 
- 사용자가 IT 리소스에 접근하지 못하도록 하는 공격
- 일반적으로 대상 시스템이 처리할 수 있는 것보다 많은 트래픽을 발생시키는 무차별적인 공격 방식
- 단일 소스의 DoS 공격은 해당 소스의 트래픽을 차단하면 쉽게 막을 수 있다

- TCP Three-Way Handshake
- TCP가 정상적으로 작동할 때 사용자가 서버에 연결하면 사용자 PC에서 서버로 SYN 메세지를 보낸다 -> SYN은 동기화를 의미
- 그럼 서버는 동기화 승인을 믜미하는 SYN-ACK를 보낸다
- 그런 다음 발신 시스템에서 승인을 의미하는 ACK를 보낸다.
- 이후 정상적인 통신이 가능.

- TCP Syn Flood Attack
- 공격자는 연결을 시작하기 위해 SYN을 보내고 서버는 SYN-ACK를 보낸다.
- 그런 다음 일반적으로 소스 시스템은 3방향 핸드셰이크를 완료하기 위해 ACK를 보내지만 여기에서는 공격자가 ACK를 보내지 않아 연결을 완료시키지 않는다. -> 반만 열린 연결
- 반만 열린 연결을 하나만 여는 것이 아니라 수없이 많이 열어서 대상 시스템의 리소스를 고갈시키고 새로 들어오는 연결을 수락할 수 없게 만든다

- DDoS ( Distributed Denial of Service )
- 단일 ip 주소에서 공격하는 공격자는 해당 소스 ip주소에서 들어오는 모든 트래픽을 막으면 차단할 수 있다.
- 동일한 유형의 공격이지만 단일 소스 ip 주소가 아닌 여러 소스에서 발생
- 감염된 좀비 호스트의 봇넷 군대를 구축하고 제어한다.
- 봇넷을 통해 감염된 호스트는 공격자의 명령 및 제어서버에 연결된다. 
- 이것은 연결이 내부에서 시작되기 때문에 방화벽을 우회한다.
- pc가 방화벽 안에 있으면 공격자가 소프트웨어를 설치하더라도 공격자가 좀비 pc에 연결을 시도하려고 하면 일반적으로 방화벽에 의해 차단되기 떄문에 작동하지 않는다
- 그러나 방화벽은 네트워크 내부의 트래픽이 네트워크 밖으로 나가고 다시 들어오는 트래픽을 허용한다
- 트로이 목마를 다운로드하여 pc에 설치하면 pc는 공격자의 명령 및 제어 서버에 연결된다.
- 방화벽은 아웃바운드 트래픽이므로 해당 트래픽을 허용하고 공격자는 방화벽을 통과해 트래픽을 다시 보낼 수 잇다. 반환 트래픽이므로 방화벽이 이를 허용한다.
- 이로 인해 공격자는 pc를 제어할 수 잇으며 거기에서 DoS 공격을 시작할 수 있다.

- Sppofing
- 공격자가 자신의 신월을 가장하는 방법
- ip address spoofing
- mac address spoofing
- application spoofing (eg rogue dhcp server)

- Man In The Middle Attack
- 공격자는 합법적인 호스트 간의 통신 경로에 자신을 삽입한다.
- 두 개의 합법적인 호스트 사이를 오가는 패킷이 공격자를 거쳐가게 되고 공격자는 해당 패킷의 데이터를 읽고 선택적으로 수정할 수 있다.
- ARP Spoofing




- IDS ( Intrusion Detection System )
- 칩입 탐지 시스템
- 트래픽 흐름을 감시하다가 공격의 가능성이 보이는 사항을 관리자에게 알려준다.
- 직접 트래픽 흐름에 있지 않은 상황에서도 방화벽이 인라인 상태라면 방화벽이 공격을 차단하도록 할 수 있다.
- 실제 흐르는 트래픽의 사본을 IDS에 보내기 위해 미러링을 쓴다. -> IDS는 트래픽을 인라인에서 직접 끊지는 못한다

- IPS ( Intrusion Prevention System )
- 칩입 방지 시스템
- 트래픽 흐름속에서 직접 공격을 막는다. 물론 알려주기도 한다
- 종종 병목 현사이 발생한다
- IPS 처리량이 트래픽을 감당하지 못한다면 네트워크 트래픽 속도를 낮추는 대신 IDS를 사용할 수 있다.

- OSI 스택에서 제 7계층의 패킷을 감지하기 위해 시그니처를 사용하는데
- 트래픽의 패턴을 읽어 이미 알려진 공격과 일치하는지를 찾아낸다
- 안티바이러스 소프트웨어와 비슷하다


- Firewall 
- 수신지 IP주소나 포트 넘버 등의 규칙에 따라 트래픽을 보내거나 막는다
- IPS는 시그니처 방화벽은 규칙을 쓴다.
- 조직에서는 Internet Edge에 항상 방화벽을 배포한다
- 내부 네트워에도 적당한 지점에 방화벽을 배포하기도 한다.

- 트래픽이 지나가는 것을 규칙에 따라 막거나 허용한다
- Stateful 방화벽은 트래픽이 방화벽을 지나갈 때 송수신 상태를 추적하는 연결 테이블을 유지한다. 반환 트래픽이 기본으로 허용된다
- 외부로부터 오는 모든 트래픽을 거부한다는 규칙을 무효화한다 -> 정당한 반환 트래픽

- Next Generation Firewalls
- 심층 패킷 검사는  OSI 7계층까지 패킷을 분석한다
- 기존의 방화벽은 4계층까지만 트래픽이 분석이 가능했지만 
- 유저에 따라 허용 범위를 다르게 할 수 있다. -> 유저의 직책에 따라 유저의 규칙을 다르게 할 수 있다.

- Packet Filters
- Access Control List Security 정책이 Packet Filter다
- 스테이트풀 방화벽과 달리 연결 테이블을 유지하지 않기 떄문에 라우터로 향하는 연결의 트래픽 송수신을 양방으로 추적하지 못한다
- 나가는 방향에만 ACL을 적용했다면 반환 트래픽이 허용된다
- 양방향에 ACL을 모두 적용했다면 나가고 들어오는 트래픽을 허용한다는 명시적 엔트리도 필요하다 -> 상태를 추적하지 못하니깐 반환되어 들어오는 유효한 트래픽 역시 구분하여 인식할 수 없기 때문이다
- 스테이트풀 방화벽을 연결해야 한다 -> 보안을 강하게 하면서 연결도  추적하길 원하니깐

- access-list 100 permit tcp any eq 80 10.10.10.0 0.0.0.255 established
- ACL에서 established는 반환 트래픽에서 응답 플그래만 확인한다 -> 라우터가 연결 상태를 추적하지 못한다
- 공격자들은 트래픽에 응답 플래그만 표시하면 되니 공격이 더 쉬워진다

- 그러면 방화벽만 쓰면 되지 않나?
- 라우터의 ACL 패킷 필터가 심층적으로 전반적인 보안에 도움을 준다
- 방화벽이 외부 공격을 막아주는 것과 마찬가지로 내부 공격도 방어해야 한다
- 보통은 주요 보안 범위에 방화벽을 사용한다 -> 인터넷 엣지나 내부 ACL로 증강시키는 경우
- 대개 외부의 공격은 강한 방화벽과 네트워크의 perimeter에서 ips를 통해 막을 수 있다.
- 민감한 호스트는 내부에도 방화벽과 ips를 갖춰야 한다

- Cryptography
- Authenticity 확실성 : 데이터가 정말 당신이 생각하는 출처로부터 왔는지
- Confidentiality 기밀성 : 신뢰할 수 없는 네트워크로 데이터를 보내다가 누군가에게 스니핑을 당해도 데이터를 읽을 수 없다
- Integrity 일관성 : 전송 중에 변경되지 않는다
- Non-repudiation 부인 방지 : 본인임을 나중에도 부인하지 못하게 하는 것

- Symmetric Encryption ( 대칭암호화 )
- 공유된 키가 데이터의 암호화와 해독을 다 하는것
- 공유된 키는 발신자와 수신자 둘 다 안다
- 빠르다
- 이메일이나 웹 트래픽, HTTPS VPN Tunnel의 IPSec처럼 대량을 전송해야 할때 사용
- 알고리즘에는 DES, 3DES, AES, SEAL

- Asymmetric Encryption ( 비대칭암호화 )
- 사설 키와 공인 키를 쓴다
- 공인 키로 암호화된 경우 사설 키로만 풀 수 있고 사설 키로 암호화된 경우 공인 키로만 풀 수 있다
- 사설 키만 비밀로 한다
- 공인 키는 모두와 공유해도 된다.
- 느리다
- 데이터 전송이 적은 key exchange, digital signatures에서 사용
- 알고리즘으로는 RSA, ECDSA

- HMAC ( Hash-Based Message Authentication Codes )
- 데이터의 일관성을 보장 -> 전송중에 데이터가 변경되지 않는다
- 발신자는 대칭 키를 사용해 데이터로부터 해시 값을 만든다. 그러면 데이터에 해시 값이 첨부된다
- 수신자가 받았던 공유 키로 데이터를 해독했을 때 해시 값이 같을 경우 전송 중에 데이터가 변경되지 않았다는 뜻이다.
- 이메일이나 웹 트래픽, HTTPS VPN Tunnel의 IPSec처럼 대량을 전송해야 할때 사용
- 알고리즘으로는 MD5, SHA

- Key Distribution
- 키를 안전하게 공유
- 공인 키 인프라 PKI 인증 기관은 공유키를 둘 사이에 안전하게 전해준다


- 전송 계층 보안을 사용하여 인터넷을 통해 트래픽을 안전하게 전송하는 방법

- SSL ( Secure Sockets Layer )

- TLS ( Transport Layer Security )
- SSL 후소작으로 TLS로 대체되었다

- HTTPS

- 대칭 암호화 기법을 사용하여 전송된 데이터를 암호화하고 긱 연결에 대한 고유 대칭키가 생성된다
- 인증은 공개키 암호화 기법에 의해 제공되며 메세지 인증 코드는 무결성을 제공한다

- Site-to-Site VPN
- DES,3DES,AES등의 대칭 암호화 알고리즘을 사용하여 인터넷과 같은 신뢰할 수 없는 네트워크를 통해 위치 간에 암호화된 트래픽을 전송한다.
- 일반적으로 양쪽의 방화벽이나 라우터에서 종료되며 터널의 양쪽에 사전 공유키를 공유하거나 인증서를 사용할 수 있다.
- 각 터널에는 다른 키를 사용해야 하며 동일한 키를 다시 아용해서는 안된다

- IPSec
- IP 네트워크에서 안전한 암호화 통신을 제공하는 개방형 표준 프레임워크이며
- Site-to-Site VPN 터널에 사용한다
- IPSec 내부에서 인터넷 키 교환 Internet Key Exchange (IKE) 프로토콜 및 알고리즘 협상을 처리하고 암호화 및 인증 키를 생성한다
- Internet Security Association and Key Management Protocol ( ISAKMP ) 인터넷 보안 연결 및 키 관리 프로토콜은 보안 연결의 피어 생성과 관리를 인증하고 전달하는 절차를 정의한다
- Authentication Header ( AH ) 인증 헤더를 가리키는 AH는 무결성 및 인증 기능을 제공하며 리플레이 공격으로부터 보호한다
- Encapsulating Security Payload ( ESP )는 기밀성 , 무결성 및 인증 기능을 제공하고 재생 공격으로부터 보호한다
- IPSec 구현할 때는 기밀성이 있는 ESP가 더 보편적으로 사용된다.

- ESP Tunnel Mode
- 원본 패킷의 ip 헤더를 암호화하여 내부 라우팅 정보를 보호한다.
- 원본 패킷은 다른 Ip 헤더 집합으로 캡슐화된다
- Site-to-Site VPN에서 광범위하게 사용된다

- ESP Transport Mode
- 페이로드와 ESP 트레일러만 암호화하며 원본 패킷의 IP 헤더는 암호화되지 않는다.
- Client-to-Site 원격 액세스 VPN에 구현된다
- 일반적으로 GRE 또는 L2TP와 같은 다른 터널링 프로토콜을 사용하여 IP 데이터 패킷을 먼저 캡슐화하는데 사용되며 IPSec은 GRE 및 L2TP 터널 패킷을 보호하는데 사용된다.
- GR2 L2TP는 터널 생성에 사용할 수 있는 또 다른 방법이고, 이는 암호화되지 않으므로 이들을 사용하고 보안을 유지하려는 경우에는 ESP TM을 사용할 수 잇다.

