- ACL ( Access Control Lists )
- 라우터를 통과하는 트래픽을 식별하고 라우터는 그에 상응하는 조취를 취힌다.
- 트래픽을 식별을 위해 출발지와 도착지의 IP 주소나 포트 번호를 확인
- 라우터나 스위치는 ACL을 토대로 조취를 취한다
- 라우터 스위치 모두 지원
- 트래픽이 라우터를 통과할 때 허용되는지의 여부를 결정하는 데 도움을 주는 보안 용도로 사용
- QoS에 더 나은 서비스를 제공하기 위해 혹은 NAT 상에서 다른 주소로의 변환을 위해

- 일련의 허용 또는 차단 규칙인 액세스 제어 항목인 ACE로 구성
- 각 ACE는 ACL을 구성하는 별도의 라인으로 작성 

- EX)                                   
                                                        Source                              Dest
              No.   Action  Protocol       IP       Wildcard    Qual    Port        IP      Wildcard 
- access-list 100   deny    tcp         10.10.30.0 0.0.0.255    gt     49151    10.10.20.1 0.0.0.0     
  Qual. Port
- eq    23

- 초기 ACL은 표준 및 확장 ACL 이었다.
- Standartd ACL Range : 1 - 99      -> Sourcess only
- Extended ACL Range : 100 - 199    -> based on the protocol, source address, dest address, port number

- 인터페이스 부족으로 인해 Cisco는 범위를 확장했다.
- Standartd ACL Range : 1 - 99 , 1300 - 1999
- Extended ACL Range : 100 - 199 , 2000 - 2699

- 표준 ACL의 기본 와일드 카드 마스크는 0.0.0.0 -> 개별 호스트 주소

- 확장 ACL
- Default Wildcard mask 없다.
- access-list 100 deny tcp 10.10.10.10 0.0.0.0 gt 49151 10.10.50.10 0.0.0.0 eq 23
- 10.10.10.10에서 10.10.50.10으로 가는 텔넷 트래픽을 거부
- 트래픽을 내보낼 때마 임의의 출발지 포트 번호를 사용 
- 49152로 시작

- access-list 100 permit tcp 10.10.10.0 0.0.0.255 gt 49151 10.10.50.10 0.0.0.0 eq telnet

- Named ACLs
- 숫자가 아닌 이름
- ip access-list standard [name]
- deny 10.10.10.10 0.0.0.0
- permit 10.10.10.0 0.0.0.255


- Protocol
- TCP나 UDP이 외에 라우팅 프로토콜을 포함한 다른 프로토콜도 넣을 수 있다. 

- 프로토콜을 지정할 때 해당 ACE가 출발지와 목적지 간의 특정 애플리케이션에 대한 트래픽에 적용되도록 하려면
- TCP나 UDP를 사용하는게 좋다
- ACE가 출발지와 목적지 주소 사이의 모든 트래픽에 적용되도록 하려면 IP를 사용하면 된다.

- Source
- access-list 100 permit tcp 10.10.10.10 0.0.0.0
- access-list 100 permit tcp host 10.10.10.10
- 개별 호스트

- access-list 100 permit tcp 0.0.0.0 255.255.255.255
- access-list 100 permit any
- 모든 IP

- Source Port Number
- eq는 동일한
- lt qt -> 작거나 크거나
- neq -> 특정 포트 번호가 아니거나
- 출발지 포트 번호를 지정하는 것은 선택이며 기본값은 모든 포트다
- 트래픽이 호스트에서 오는 경우 임의의 높은 번호 포트 번호인 임시 포트를 활용

- 마지막 옵션
- 목적지 포트를 지정할 때 명령 라인에는 이름을 사용할 수 있는 잘 알려진 포트 번호가 내장되어 있다.
- eq telnet 같은


- access-list 100 deny tcp host 10.10.10.10 10.10.20.0 0.0.0.255 eq www log

- ACL 확인
- 한 인터페이스에서 허용하거나 차단하려는 트래픽에 대해 타 인퍼에시으와 다른 규칙이 있기 떄문
- 즉, 두 개의 서로 다른 인터페이스에 대해 서로 다른 ACL을 갖게 될 수도 있다.

- show access-lists [number]

- Access Group
- 적용

- 한 인터페이스, 한 방향당 최대 하나의 ACL을 가질 수 있다.
- 동일한 인터페이스에서 인바운드 ACL와 아웃바운드 ACL을 모두 가질 수 있지만
- 동일 인터페이스에서 2개의 인바운드 또는 2개의 아웃바운드를 가질 수 없다.

- interface GigabitEthernet [0/1]
- ip access-group 100 out
- ip access-group 101 in

- show ip interface [f1/0] | include access list
- 액세스 목록이 어떤 인터페이스에 적용되었는지 확인
- not set 이면 적용안된것

- 라우터는 ACL을 위에서 아래로 읽는다.
- 패킷에서 규칙이 일치하는 즉시 허용 또는 차단이 적용되고 해당 패킷에 대해 ACL은 더 이상 처리하지 않는다.
- 가장 구체적인 항목을 목록의 맨 위에 배치

- show access-lists 110
- Extended IP access list 110
- 10 deny tcp host 10.10.10.10 host 10.10.50.10 eq telnet
- [ 15 deny tcp host 10.10.10.11 host 10.10.50.10 eq telnet ]
- 20 permit tcp 10.10.10.0 0.0.0.255 host 10.10.50.10 eq telnet
- 30 deny tcp host 10.10.20.10 host 10.10.50.10 eq telnet
- 40 permit tcp 10.20.10.10 0.0.0.255 host 10.10.50.10 eq telnet

- ip access-list extended 110
- 15 deny tcp host 10.10.10.11 host 10.10.50.10 eq telnet

- 기본적으로 ACE에 10씩 숫자가 올라간다 
- 그래서 위의 2줄의 명령을 입력하면 50 으로 시작하는 ACE가 원래는 젤 아래 배치될것이다
- 그러면 10.10.10.11의 호스트를 차단할 수 없다. 왜냐하면 20 ACE에서 이미 10.10.10.0/24의 대역들을 허용하므로
- 따라서 20 ACE 보다 위에 배치해야하는데 그럴떄 맨 앞에 20보다 낮은 숫자를 입력해서 
- 기존 ACL에 ACE를 삽입할 수 있다.

- 모든 ACL의 맨 아래에는 암시적 deny any 규칙이 있다.
- 인터페이스에 ACL이 적용되지 않으면 모든 트래픽이 허용된다.
- ACL이 적용되어 있으면 암시적 deny any 규칙 때문에 명시적으로 허용된 트래픽을 제외한 모든 트래픽이 제외된다.

- access-list 1 permit 10.10.10.0 0.0.0.255
- 10.10.10.0/24로부터의 트래픽은 허용되지만 ACL 맨 아래 deny any 때문에 다른 모든 트래픽은 차단된다.

- access-list 1 deny any log
- 불법적인 트래픽을 기록하기 위해 ACL 끝에 deny any를 일부러 입력하기도 한다.

- 명시적으로 선언된 트래픽을 차단하고 모든 트래픽을 허용되도록 하려면
- access-list 1 deny 10.10.10.0 0.0.0.255
- access-list 1 permit any 

- ACL은 라우터 자체에서 발생하는 트래픽에는 적용되지 않는다.

- access-list 100 deny tcp any any eq 23
- interface f1/0
- ip access-group 100 out

- pc - switch - router1 - router2 
- 상황에서 위의 처럼 router1에 적용하면 pc에서 r2로 보내는 텔넷 트래픽은 차단하지만
- router1에서 router2로 보내는 텔넷 트래픽은 차단하지 않는다
- 왜냐하면 router 자체에서 발생하는 트래픽에는 적용되지 않기 떄문이다
- 따라서 router1에서의 텔넷 트래픽도 차단할려면
- router2에서 인바운드로 acl을 적용해야한다.

